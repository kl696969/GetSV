name: Fetch and clean server list with UTF-8 fix

on:
  schedule:
    - cron: '0 * * * *'  # ch·∫°y m·ªói gi·ªù
  workflow_dispatch:

jobs:
  fetch_clean_save:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Fetch and clean data by URL order
        run: |
          mkdir -p urls && > combined.txt

          fetch_and_clean() {
            local url=$1
            local name=$2
            local tmpfile="urls/$name.txt"

            echo "Fetching $url..."
            curl -s "$url" > raw.txt

            # Xo√° BOM n·∫øu c√≥
            sed '1s/^\xEF\xBB\xBF//' raw.txt > clean.txt

            # ƒê·∫£m b·∫£o d√≤ng cu·ªëi c√≥ d·∫•u ,
            sed -i '$s/[^,]$/.&,/; $s/,$//; $s/$/,/' clean.txt

            # T√°ch theo d·∫•u ph·∫©y + chu·∫©n h√≥a
            tr ',\r' '\n' < clean.txt | grep -v '^$' | sed 's/ *@*$/@/' > "$tmpfile"

            rm -f raw.txt clean.txt
          }

          # Danh s√°ch URL theo th·ª© t·ª± mong mu·ªën
          fetch_and_clean http://rkbom.site/ip/svmoi.txt         svmoi
          fetch_and_clean http://kpah99.com/nqsh9.txt            nqsh9

          # G·ªôp ƒë√∫ng th·ª© t·ª±
          for f in urls/*.txt; do
            cat "$f" >> combined.txt
          done

          # L·ªçc tr√πng theo IP:PORT
          awk -F: '!a[$2":"$3]++' combined.txt > step_filtered.txt

          # Ch·ªâ gi·ªØ d√≤ng h·ª£p l·ªá
          grep -E '^[^:]+:[^:]+:[0-9]+:[0-9]+@$' step_filtered.txt > fullsv.txt

          # X√≥a @ ·ªü d√≤ng cu·ªëi n·∫øu c√≥
          sed -i '${s/@$//}' fullsv.txt

          rm -rf urls combined.txt step_filtered.txt

      - name: Compare and notify if changed
        run: |
          cp fullsv.txt new_fullsv.txt
          git fetch origin main
          git checkout origin/main -- fullsv.txt || true

          if ! cmp -s fullsv.txt new_fullsv.txt; then
            echo "CHANGED=true" >> $GITHUB_ENV
            diff=$(diff fullsv.txt new_fullsv.txt | grep '^>' | sed 's/^> //' | head -n 10 | sed ':a;N;$!ba;s/\n/\\n/g')
            message="üì• fullsv.txt ƒë√£ c·∫≠p nh·∫≠t l√∫c $(date '+%H:%M %d-%m-%Y') UTC\\n\\nüÜï D√≤ng m·ªõi:\\n${diff}"
            echo "TG_MESSAGE=$message" >> $GITHUB_ENV
          else
            echo "CHANGED=false" >> $GITHUB_ENV
          fi

      - name: Send Telegram message if changed
        if: env.CHANGED == 'true'
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="${{ env.TG_MESSAGE }}"

      - name: Commit and push fullsv.txt
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add fullsv.txt
          git commit -m "Update fullsv.txt at $(date -u)" || echo "Nothing to commit"

          git remote set-url origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}
          git push origin HEAD:main
